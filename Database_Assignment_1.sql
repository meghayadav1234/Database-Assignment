CREATE TABLE ASSIGNMENT_1.SALESPEOPLE(
SNUM INTEGER PRIMARY KEY,
SNAME VARCHAR(100),
CITY VARCHAR(20),
COMM INTEGER 
);

INSERT INTO ASSIGNMENT_1.SALESPEOPLE(SNUM, SNAME, CITY, COMM) VALUES (1001,'PEEL','LONDON',12);

INSERT INTO ASSIGNMENT_1.SALESPEOPLE(SNUM, SNAME, CITY, COMM) VALUES (1002,'SERRES','SANJOSE',14);

INSERT INTO ASSIGNMENT_1.SALESPEOPLE(SNUM, SNAME, CITY, COMM) VALUES (1003,'AXCELROD','NEW YORK',10);

INSERT INTO ASSIGNMENT_1.SALESPEOPLE(SNUM, SNAME, CITY, COMM) VALUES (1004,'MOTIKA','LONDON',11);

INSERT INTO ASSIGNMENT_1.SALESPEOPLE(SNUM, SNAME, CITY, COMM) VALUES (1005,'FRAN','LONDON',26);

INSERT INTO ASSIGNMENT_1.SALESPEOPLE(SNUM, SNAME, CITY, COMM) VALUES (1007,'RIKKLIN','BARCELONA',21);

CREATE TABLE ASSIGNMENT_1.CUSTOMER(
CNUM INTEGER PRIMARY KEY,
CNAME VARCHAR(100),
CITY VARCHAR(50),
SNUM INTEGER ,
RATING INTEGER,
CONSTRAINT FK_SNUM FOREIGN KEY (SNUM)
    REFERENCES SALESPEOPLE(SNUM) );

INSERT INTO ASSIGNMENT_1.CUSTOMER (CNUM	,CNAME,	CITY, SNUM,	RATING) VALUES(2001,'KELVIN','SANJOSE',	1007,200);

INSERT INTO ASSIGNMENT_1.CUSTOMER (CNUM	,CNAME,	CITY, SNUM,	RATING) VALUES(2002,'GIOVANNI','ROME',1003,200);

INSERT INTO ASSIGNMENT_1.CUSTOMER (CNUM	,CNAME,	CITY, SNUM,	RATING) VALUES(2003,'LIU','SANJOSE',1002,200);

INSERT INTO ASSIGNMENT_1.CUSTOMER (CNUM	,CNAME,	CITY, SNUM,	RATING) VALUES(2004,'GRASS','BARLIN',1002,300);

INSERT INTO ASSIGNMENT_1.CUSTOMER (CNUM	,CNAME,	CITY, SNUM,	RATING) VALUES(2006,'CLEMENS','LONDON',1001,100);

INSERT INTO ASSIGNMENT_1.CUSTOMER (CNUM	,CNAME,	CITY, SNUM,	RATING) VALUES(2007	,'PEREIRA','ROME',1004,100);

INSERT INTO ASSIGNMENT_1.CUSTOMER (CNUM	,CNAME,	CITY, SNUM,	RATING) VALUES(2008,'CISNEROS','SANJOSE',1007,300);

DROP TABLE ASSIGNMENT_1.ORDERS;

CREATE TABLE ASSIGNMENT_1.ORDERS(
ONUM INTEGER,
AMT DOUBLE,
SNUM INTEGER,
CNUM INTEGER,
ODATE DATE,
CONSTRAINT FK_ORDER_ FOREIGN KEY (SNUM)
    REFERENCES ASSIGNMENT_1.SALESPEOPLE(SNUM) ,
 CONSTRAINT FK_ORDER_2 FOREIGN KEY (CNUM)
REFERENCES ASSIGNMENT_1.CUSTOMER(CNUM));

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3001,	18.69, 1007, 2008, '1996/03/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3003,	890,1001,2001,'1996/03/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3002,1900.1,1004,2007,'1996/03/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3005,	5160.45	,1002,2003,'1996/03/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3006,	1098.16	,1007,	2008,'1996/03/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3009,	1713.23,1003,2002,'1996/04/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3007,	75.75,1003,	2002,'1996/04/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3008,4723,1001,2006,'1996/05/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3010,1309.95,1002,2004,'1996/06/10');

INSERT INTO ASSIGNMENT_1.ORDERS (ONUM, AMT, SNUM, CNUM, ODATE) VALUES(3011,9891.8,1001,2006,'1996/06/10');

-- Count the number of Non NULL rating fields in the Customers table (including repeats)

SELECT COUNT(*) FROM ASSIGNMENT_1.CUSTOMER WHERE RATING IS NOT NULL;

-- 2	Write a query that gives the names of both the salesperson and the customer for each order after the order number

SELECT ONUM, (SELECT SNAME FROM ASSIGNMENT_1.SALESPEOPLE S WHERE O.SNUM =S.SNUM ) AS SNAME,
(SELECT CNAME FROM ASSIGNMENT_1.CUSTOMER C WHERE O.CNUM =C.CNUM ) AS CNAME
 FROM ASSIGNMENT_1.ORDERS O ;

-- Count the number of Salespeople registering orders for each day. (If a salespersons has more than one order on given day, he or she should be counted only once).

SELECT ODATE, COUNT(DISTINCT SNUM) ,SNUM FROM ASSIGNMENT_1.ORDERS O GROUP BY ODATE;

-- Find all orders attributed to salespeople in London.

SELECT * FROM ASSIGNMENT_1.ORDERS WHERE SNUM IN (
SELECT SNUM FROM ASSIGNMENT_1.SALESPEOPLE S WHERE CITY = 'LONDON');

-- 5	Find all salespeople who have customers with more than one current order

SELECT * FROM ASSIGNMENT_1.SALESPEOPLE WHERE SNUM IN(SELECT SNUM FROM ASSIGNMENT_1.ORDERS  GROUP BY CNUM HAVING COUNT(ONUM) >1) ;


-- Write a query that selects all customers whose names begins with ‘C’.

SELECT * FROM ASSIGNMENT_1.CUSTOMER WHERE CNAME LIKE 'C%';

--   Write a query on the Customers table that will find the highest rating in each city. 
-- Put the output in this form: for the City (city) the highest rating is: (rating)

SELECT CITY ,MAX(RATING) FROM ASSIGNMENT_1.CUSTOMER GROUP BY CITY;

--   Write a query that selects each customer’s smallest order.

SELECT CNUM , MIN(AMT) FROM ASSIGNMENT_1.ORDERS GROUP BY CNUM;

-- Write a query that selects the first customer in alphabetical order whose name begins with G

SELECT * FROM ASSIGNMENT_1.CUSTOMER WHERE CNAME LIKE 'G%' ORDER BY CNAME LIMIT 1;

-- Write a query that counts the number of different non NULL city values in the Customers table

SELECT COUNT(DISTINCT CITY)  FROM ASSIGNMENT_1.CUSTOMER WHERE CITY IS NOT NULL;

-- 11	  Find the average amount from the Orders table.

SELECT AVG(AMT) FROM ASSIGNMENT_1.ORDERS;

-- 12	  Find all customers who are not located in San Jose and whose rating is above 200.

SELECT * FROM ASSIGNMENT_1.CUSTOMER WHERE CITY <> 'SANJOSE' AND RATING >200;

-- 13	  Does the customer who has placed the maximum number of orders have the maximum rating?

SELECT O.CNUM ,MAX(AMT),MAX(C.RATING) FROM ASSIGNMENT_1.CUSTOMER C,ASSIGNMENT_1.ORDERS O WHERE C.CNUM=O.CNUM GROUP BY CNUM;

-- 14	Find all records in the Customer table with NULL values in the city column

SELECT * FROM ASSIGNMENT_1.CUSTOMER WHERE CITY IS NULL;

-- 15	Arrange the Orders table by descending customer number.

SELECT * FROM ASSIGNMENT_1.ORDERS  ORDER BY CNUM DESC;

-- 16	Find which salespeople currently have orders in the Orders table.

SELECT * FROM ASSIGNMENT_1.salespeople WHERE SNUM IN (SELECT SNUM FROM ASSIGNMENT_1.ORDERS);

-- 17	Find the names and numbers of all salespeople who had more the one customer.
-- ---------------------------------------------------------------
SELECT * FROM ASSIGNMENT_1.salespeople WHERE SNUM IN (SELECT SNUM FROM ASSIGNMENT_1.CUSTOMER 
HAVING COUNT(SNUM) > 2);


-- 18	Count the orders of each of the salespeople and output the results in descending order.

SELECT  COUNT(ONUM),SNUM FROM ASSIGNMENT_1.ORDERS GROUP BY SNUM ORDER BY COUNT(ONUM);

-- 19	List the Customer table if and only if one or more of the Customers in the Customer table are located in San Jose.
-- ------------------------------------------------------- 
SELECT *  FROM ASSIGNMENT_1.CUSTOMER WHERE CITY = 'SANJOSE';

-- 20	Find the largest order taken by each salesperson.

SELECT MAX(AMT),SNUM FROM ASSIGNMENT_1.ORDERS GROUP BY SNUM;

-- 21	Find customers in San Jose who have a rating above 200.

SELECT *  FROM ASSIGNMENT_1.CUSTOMER WHERE CITY = 'SANJOSE' AND RATING > 200;

-- 22	List all the orders of salesperson Motika from the Orders table.

SELECT * FROM ASSIGNMENT_1.ORDERS WHERE SNUM = (SELECT SNUM FROM ASSIGNMENT_1.SALESPEOPLE WHERE SNAME='MOTIKA');

-- 23	Find salespeople who have multiple customers.
-- --------------------------------------
SELECT COUNT(SNUM) FROM ASSIGNMENT_1.CUSTOMER  GROUP BY SNUM ;

-- 24	Find salespeople with customers located in their city.

SELECT * FROM ASSIGNMENT_1.CUSTOMER C
INNER JOIN ASSIGNMENT_1.SALESPEOPLE S ON S.SNUM = C.SNUM
 WHERE C.CITY IN (SELECT CITY FROM ASSIGNMENT_1.SALESPEOPLE) ;

-- 25	Find the largest orders for serres and Rifkin.

SELECT MAX(AMT),SNUM FROM ASSIGNMENT_1.ORDERS WHERE 
SNUM IN (SELECT SNUM FROM ASSIGNMENT_1.SALESPEOPLE WHERE SNAME IN('SERRES','RIKKLIN')) GROUP BY SNUM;

-- 26	Find all salespeople that are located in either Barcelona or London.

SELECT * FROM ASSIGNMENT_1.SALESPEOPLE WHERE CITY IN('BARCELONA','LONDON');

-- 27	Find all salespeople with only one customer.
 -- ----------------------------------------
SELECT * FROM ASSIGNMENT_1.SALESPEOPLE WHERE SNUM in(SELECT SNUM FROM ASSIGNMENT_1.CUSTOMER C GROUP BY SNUM HAVING COUNT(SNUM) = 1   );

-- 28	Find salespeople whose sales is greater the avg sales

SELECT * FROM ASSIGNMENT_1.SALESPEOPLE WHERE COMM > (SELECT AVG(COMM) FROM ASSIGNMENT_1.SALESPEOPLE)